{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","_super","call","state","data","data2","data3","book","chapter","verseS","verseE","view","bookData","bookData2","bookData3","verseData","verseData2","selection","version","version2","_loadingOT","asyncToGenerator","regenerator_default","a","mark","_callee","temp","temp2","temp3","i","wrap","_context","prev","next","push","bible","bible2","bible3","setState","book_name","stop","_loagingNT","_callee2","_context2","_selectBook","event","n","target","id","_clearInput","bookName","_displayData","map","react_default","createElement","className","book_nr","key","onClick","_chapterVerse","onSubmit","_result","type","pattern","name","content","value","defaultValue","ddata","ddata2","preventDefault","formData","FormData","get","alert","cnum","Number","vsnum","venum","document","getElementById","maxChapter","length","ar2","ar","values","maxVerse","keys","loaded","element","style","color","fontWeight","verseNum","verse","verse_2","_words","tempV","index","_selectVerses","verseNumber","selectedVerse","_selectedCopy","_callee3","str","_context3","String","childNodes","textContent","navigator","clipboard","writeText","_firstChapter","click","_prevChapter","chNum","_nextChapter","_copyData","copyText","querySelector","window","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","execCommand","bind","assertThisInitialized","title","align","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a4f35b27.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport bible from \"./ko_ko.json\";\nimport bible2 from \"./ko_ko_GAE.json\";\nimport bible3 from \"./kjv_ko.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    data: [],\n    data2: [],\n    data3: [],\n    book: 0,\n    chapter: 0,\n    verseS: 0,\n    verseE: 0,\n    view: false,\n    bookData: [],\n    bookData2: [],\n    bookData3: [],\n    verseData: [],\n    verseData2: [],\n    selection: [],\n    version: \"\",\n    version2: null\n  };\n\n  constructor() {\n    super();\n    this._result = this._result.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = \"바이블 검색 페이지\";\n  }\n\n  //구약 성경 불러와서 state data 갱신\n  _loadingOT = async () => {\n    let temp = [];\n    let temp2 = [];\n    let temp3 = [];\n    for (let i = 0; i < 39; ++i) {\n      temp.push(bible[i]);\n      temp2.push(bible2[i]);\n      temp3.push(bible3[i]);\n    }\n    this.setState({\n      data: temp,\n      data2: temp2,\n      data3: temp3,\n      book: 0,\n      chapter: 0,\n      verseS: 0,\n      verseE: 0,\n      view: false,\n      verseData: [],\n      book_name: null\n    });\n  };\n\n  //신약 성경 불러와서 state data 갱신\n  _loagingNT = async () => {\n    let temp = [];\n    let temp2 = [];\n    let temp3 = [];\n    for (let i = 39; i < 66; ++i) {\n      temp.push(bible[i]);\n      temp2.push(bible2[i]);\n      temp3.push(bible3[i]);\n    }\n    this.setState({\n      data: temp,\n      data2: temp2,\n      data3: temp3,\n      book: 0,\n      chapter: 0,\n      verseS: 0,\n      verseE: 0,\n      view: false,\n      verseData: []\n    });\n  };\n\n  //성경 선택하면 state에 성경 이름과 id를 갱신\n  _selectBook = event => {\n    let n = event.target.id;\n    if (n > 39) {\n      n = n - 40;\n    } else {\n      n = n - 1;\n    }\n\n    if (this.state.view) {\n      this._clearInput();\n    }\n    this.setState({\n      book: event.target.id,\n      bookName: this.state.data[n].book_name,\n      bookData: this.state.data[n],\n      bookData2: this.state.data2[n],\n      bookData3: this.state.data3[n],\n      view: false,\n      verseData: []\n    });\n  };\n\n  //구약, 신약 선택 후 각 성경 리스트 버튼으로 리턴\n  _displayData = () => {\n    const items = this.state.data.map(data => {\n      return (\n        <button\n          className=\"book\"\n          id={data.book_nr}\n          key={data.book_nr}\n          onClick={this._selectBook}\n        >\n          {data.book_name}\n        </button>\n      );\n    });\n    return items;\n  };\n\n  //성경을 선택하면 장, 절 입력 화면 출력\n  _chapterVerse = () => {\n    return (\n      <div>\n        <span id=\"bookinfo\">{this.state.bookName}</span>\n        <br/>\n        <form onSubmit={this._result} id=\"inputForm\">\n          <label>\n            <input\n              type=\"number\"\n              pattern=\"\\d*\"\n              name=\"chapterNum\"\n              id=\"chapterNum\"\n              content=\"user-scalable=no\"\n            />\n            장\n          </label>\n          <label>\n            <input\n              type=\"number\"\n              pattern=\"\\d*\"\n              name=\"verseStart\"\n              id=\"verseStart\"\n              content=\"user-scalable=no\"\n            />\n            절~\n          </label>\n          <label>\n            <input\n              type=\"number\"\n              pattern=\"\\d*\"\n              name=\"verseEnd\"\n              id=\"verseEnd\"\n              content=\"user-scalable=no\"\n            />\n            절\n          </label>\n          <select name=\"version\" id=\"version\">\n            <option value=\"han\" defaultValue>\n              개역한글\n            </option>\n            <option value=\"gae\">개역개정</option>\n            <option value=\"kjv\">흠정역</option>\n          </select>\n          <select name=\"version2\" id=\"version2\">\n            <option value=\"none\" defaultValue>\n              대역\n            </option>\n            <option value=\"han\">\n              개역한글\n            </option>\n            <option value=\"gae\">개역개정</option>\n            <option value=\"kjv\">흠정역</option>\n          </select>\n          <input type=\"submit\" id=\"viewSubmit\" value=\"보기\"/>\n        </form>\n      </div>\n    );\n  };\n\n  //입력 후 결과 화면 출력\n  _result = event => {\n    event.preventDefault();\n    let ddata;\n    let ddata2;\n\n    //입력 form에서 입력 데이터 가져오기\n    let formData = new FormData(event.target);\n    let version = null;\n    let version2 = null;\n\n    if (formData.get(\"version\") === \"han\") {\n      version = '개역한글';\n      ddata = this.state.bookData;\n    } else if (formData.get(\"version\") === \"gae\") {\n      version = '개역개정';\n      ddata = this.state.bookData2;\n    } else {\n      version = '흠정역';\n      ddata = this.state.bookData3;\n    }\n\n    //대역 선택\n    if(formData.get(\"version\") === formData.get(\"version2\")){\n      alert('동일 역본 입니다.')\n    }\n    else if (formData.get(\"version2\") === \"han\") {\n      version2 = '개역한글';\n      ddata2 = this.state.bookData;\n    } else if (formData.get(\"version2\") === \"gae\") {\n      version2 = '개역개정';\n      ddata2 = this.state.bookData2;\n    } else if (formData.get(\"version2\") === \"kjv\"){\n      version2 = '흠정역';\n      ddata2 = this.state.bookData3;\n    }\n\n\n\n    //입력화면에 있는 장, 시작 절, 끝 절 값 가져오기\n    let cnum = Number(formData.get(\"chapterNum\"));\n    let vsnum = Number(formData.get(\"verseStart\"));\n    let venum = Number(formData.get(\"verseEnd\"));\n\n    if (cnum === 0) {\n      cnum = 1;\n      document.getElementById(\"chapterNum\").value = 1;\n    }\n    //절을 입력하지 않았을 시 장 전체 출력\n    if (\n      Number(formData.get(\"verseStart\")) === 0 &&\n      Number(formData.get(\"verseEnd\")) === 0\n    ) {\n      vsnum = 1;\n      document.getElementById(\"verseStart\").value = 1;\n      venum = 999;\n    } else if (\n      Number(\n        formData.get(\"verseStart\") > 0 && Number(formData.get(\"verseEnd\")) === 0\n      )\n    ) {\n      //시작 절 부분만 입력시 해당 구절만 출력\n      venum = vsnum;\n      document.getElementById(\"verseEnd\").value = vsnum;\n    }\n\n    //입력이 올바르지 않을시 alert출력 및 값 재설정\n    if (cnum < 0) {\n      alert(\"올바르지 않은 입력입니다.\");\n      return;\n    }\n\n    //입력한 성경이 몇 장으로 이루어져있는지 정보 가져오기\n    let maxChapter = Number(ddata.book.length);\n    //입력한 장이 해당 성경의 장수보다 높으면 마지막 장을 출력하도록 갱신\n    if (cnum > maxChapter) {\n      cnum = maxChapter;\n      document.getElementById(\"chapterNum\").value = maxChapter;\n    }\n\n    //입력한 장이 몇 절로 이루어졌는지 정보 가져오기\n    const obj = Object.values(ddata.book[cnum - 1]);\n    const ar = obj[0];\n    let maxVerse = Number(Object.keys(ar).length);\n\n    let obj2, ar2;\n    if(version2){\n      obj2 = Object.values(ddata2.book[cnum - 1]);\n      ar2 = obj2[0];\n    }\n\n    //입력이 올바르지 않을시 alert출력 및 값 재설정\n    if (vsnum <= 0 || vsnum > venum) {\n      alert(\"올바르지 않은 입력입니다.\");\n      return;\n    }\n\n    let loaded = [];\n\n    //입력한 절이 해당 장의 절수보다 높으면 마지막 절을 출력하도록 갱신\n    if (venum > maxVerse) {\n      venum = maxVerse;\n      document.getElementById(\"verseEnd\").value = maxVerse;\n    }\n    if (vsnum > maxVerse) {\n      vsnum = maxVerse;\n      document.getElementById(\"verseStart\").value = maxVerse;\n    }\n\n    let i = vsnum;\n    while (i <= venum) {\n      var element = document.getElementById(i * 1000);\n      if (element !== null) {\n        element.style.color = \"black\";\n        element.style.fontWeight = 400;\n      }\n\n      if(version2){\n        loaded.push({verseNum: i, verse: Object.values(ar)[i - 1], verse_2: Object.values(ar2)[i - 1]});\n      } else {\n        loaded.push({verseNum: i, verse: Object.values(ar)[i - 1]});\n      }\n\n\n      i++;\n    }\n\n    //bible.json파일에 있는 data에서 필요한 구절들을 배열에 넣고 state에 갱신\n    this.setState({\n      chapter: cnum,\n      verseS: vsnum,\n      verseE: venum,\n      verseData: loaded,\n      view: true,\n      version: version,\n      version2: version2\n    });\n  };\n\n  //state에 있는 data를 div tag에 리턴\n  _words = () => {\n    let items = null;\n    if (this.state.verseData.length === 1) {\n      items = this.state.verseData.map(tempV => {\n        var index = Number(tempV.verseNum) * 1000;\n        return (\n          <p\n            key={index}\n            id={index}\n            style={{color: \"black\", fontWeight: 400}}\n            onClick={() => {\n              this._selectVerses(index);\n            }}\n          >\n            {tempV.verse}\n          </p>\n        )\n      })\n    } else {\n      items = this.state.verseData.map(tempV => {\n        var index = Number(tempV.verseNum) * 1000;\n        return (\n          <p\n            key={index}\n            id={index}\n            style={{ color: \"black\", fontWeight: 400 }}\n            onClick={() => {\n              this._selectVerses(index);\n            }}\n          >\n            {Number(tempV.verseNum) + \". \" + tempV.verse}<br/>\n            {tempV.verse_2 ? (Number(tempV.verseNum) + \". \" + tempV.verse_2) : ''}\n          </p>\n        );\n      });\n    }\n\n    return items;\n  };\n\n  //구절 선택시 폰트 변경\n  _selectVerses = verseNumber => {\n    var selectedVerse = document.getElementById(verseNumber);\n    if (selectedVerse.style.color === \"black\") {\n      selectedVerse.style.color = \"#003399\";\n      selectedVerse.style.fontWeight = 500;\n    } else {\n      selectedVerse.style.color = \"black\";\n      selectedVerse.style.fontWeight = 400;\n    }\n    this._selectedCopy();\n  };\n\n  //선택한 구절 클립보드에 복사\n  _selectedCopy = async () => {\n    var str = \"\";\n    for (\n      var i = Number(this.state.verseS);\n      i <= Number(this.state.verseE);\n      ++i\n    ) {\n      var element = document.getElementById(i * 1000);\n      if (element.style.color !== \"black\") {\n        str = str + String(element.childNodes[0].textContent) + '\\n';\n      }\n    }\n    str = str + (this.state.bookName + \" \" + this.state.chapter + \"장 \" + this.state.version);\n    await navigator.clipboard.writeText(str);\n\n  };\n\n  //1장으로 돌아가기\n  _firstChapter = () => {\n    document.getElementById(\"chapterNum\").value = 1;\n    document.getElementById(\"verseStart\").value = null;\n    document.getElementById(\"verseEnd\").value = null;\n    document.getElementById(\"viewSubmit\").click();\n  };\n\n  //이전 장으로 이동\n  _prevChapter = () => {\n    let chNum = document.getElementById(\"chapterNum\").value;\n    if (chNum > 1) {\n      document.getElementById(\"chapterNum\").value = Number(chNum) - 1;\n      document.getElementById(\"verseStart\").value = null;\n      document.getElementById(\"verseEnd\").value = null;\n      document.getElementById(\"viewSubmit\").click();\n    }\n  };\n\n  //다음 장으로 이동\n  _nextChapter = () => {\n    let chNum = document.getElementById(\"chapterNum\").value;\n    document.getElementById(\"chapterNum\").value = Number(chNum) + 1;\n    document.getElementById(\"verseStart\").value = null;\n    document.getElementById(\"verseEnd\").value = null;\n    document.getElementById(\"viewSubmit\").click();\n  };\n\n  //출력된 구절 클립보드에 복사하기\n  _copyData = () => {\n    let copyText = document.querySelector(\".verseDisplay\");\n    let selection = window.getSelection();\n    let range = document.createRange();\n    range.selectNodeContents(copyText);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    document.execCommand(\"Copy\");\n    alert(\"클립보드에 복사 완료!\");\n  };\n\n  _clearInput = () => {\n    document.getElementById(\"chapterNum\").value = null;\n    document.getElementById(\"verseStart\").value = null;\n    document.getElementById(\"verseEnd\").value = null;\n    for (var i = Number(this.state.verseS); i <= Number(this.state.verseE); ++i) {\n      var element = document.getElementById(i * 1000);\n      if (element.style.color !== \"black\") {\n        element.style.color = \"black\";\n        element.style.fontWeight = 400;\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"AppDisplay\" align=\"center\">\n        <button id=\"ot\" onClick={this._loadingOT}>\n          구약\n        </button>\n        <button id=\"nt\" onClick={this._loagingNT}>\n          신약\n        </button>\n        <div className=\"books\">\n          {this.state.data.length !== 0 ? this._displayData() : null}\n          {this.state.book !== 0 ? this._chapterVerse() : null}\n          {/*{this.state.book !== 0 ? (*/}\n          {/*  <p id=\"lastinfo\" align=\"left\">*/}\n          {/*    해당 장(절)보다 큰 수 입력시 마지막 장(절) 출력*/}\n          {/*    <br />*/}\n          {/*    예) 창세기 경우 50장 이므로 50보다 큰 수(51, 99...) 입력시 50장이*/}\n          {/*    입력됨.*/}\n          {/*    <br />*/}\n          {/*    원하는 구절 선택시 클립보드에 복사됨.*/}\n          {/*  </p>*/}\n          {/*) : null}*/}\n        </div>\n        {this.state.view ? (\n          <div>\n            <button id=\"copy\" onClick={this._copyData}>\n              전체복사\n            </button>\n            <button id=\"prev\" onClick={this._prevChapter}>\n              이전장\n            </button>\n            <button id=\"next\" onClick={this._nextChapter}>\n              다음장\n            </button>\n            <button id=\"clear\" onClick={this._clearInput}>\n              초기화\n            </button>\n          </div>\n        ) : null}\n        <br/>\n        <div className=\"verseDisplay\" align=\"left\">\n          {this.state.view && this.state.verseS !== this.state.verseE ? (\n            <p id=\"info\">\n              {this.state.bookName} {this.state.chapter}:{this.state.verseS}~\n              {this.state.verseE} {this.state.version}\n            </p>\n          ) : null}\n          {this.state.view && this.state.verseS === this.state.verseE ? (\n            <p id=\"info\">\n              {this.state.bookName} {this.state.chapter}:{this.state.verseS} {this.state.version}\n            </p>\n          ) : null}\n          {this._words()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}