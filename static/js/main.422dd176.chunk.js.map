{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","data2","book","chapter","verseS","verseE","view","bookData","bookData2","verseData","selection","_loadingOT","asyncToGenerator","regenerator_default","a","mark","_callee","temp","temp2","i","wrap","_context","prev","next","push","bible","bible2","setState","book_name","stop","_loagingNT","_callee2","_context2","_selectBook","event","n","target","id","_clearInput","bookName","_displayData","map","react_default","createElement","className","book_nr","key","onClick","_chapterVerse","onSubmit","_result","type","pattern","name","required","content","value","defaultValue","ddata","preventDefault","formData","FormData","get","cnum","Number","vsnum","venum","document","getElementById","alert","maxChapter","length","ar","values","maxVerse","keys","loaded","verseNum","verse","_words","tempV","style","color","_selectVerses","verseNumber","selectedVerse","_copyData","copyText","querySelector","window","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","execCommand","bind","assertThisInitialized","title","align","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.422dd176.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport bible from \"./ko_ko.json\";\nimport bible2 from \"./ko_ko_GAE.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    data: [],\n    data2: [],\n    book: 0,\n    chapter: 0,\n    verseS: 0,\n    verseE: 0,\n    view: false,\n    bookData: [],\n    bookData2: [],\n    verseData: [],\n    selection: []\n  };\n\n  constructor() {\n    super();\n    this._result = this._result.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = \"바이블 검색 페이지\";\n  }\n\n  //구약 성경 불러와서 state data 갱신\n  _loadingOT = async () => {\n    let temp = [];\n    let temp2 = [];\n    for (let i = 0; i < 39; ++i) {\n      temp.push(bible[i]);\n      temp2.push(bible2[i]);\n    }\n    this.setState({\n      data: temp,\n      data2:temp2,\n      book: 0,\n      chapter: 0,\n      verseS: 0,\n      verseE: 0,\n      view: false,\n      verseData: [],\n      book_name: null\n    });\n  };\n\n  //신약 성경 불러와서 state data 갱신\n  _loagingNT = async () => {\n    let temp = [];\n    let temp2 = [];\n    for (let i = 39; i < 66; ++i) {\n      temp.push(bible[i]);\n      temp2.push(bible2[i]);\n    }\n    this.setState({\n      data: temp,\n      data2:temp2,\n      book: 0,\n      chapter: 0,\n      verseS: 0,\n      verseE: 0,\n      view: false,\n      verseData: []\n    });\n  };\n\n  //성경 선택하면 state에 성경 이름과 id를 갱신\n  _selectBook = event => {\n    let n = event.target.id;\n    if (n > 39) {\n      n = n - 40;\n    } else {\n      n = n - 1;\n    }\n\n    if(this.state.view){\n      this._clearInput();\n    }\n    this.setState({\n      book: event.target.id,\n      bookName: this.state.data[n].book_name,\n      bookData:this.state.data[n],\n      bookData2:this.state.data2[n],\n      view:false,\n      verseData:[]\n    });\n  };\n\n  //구약, 신약 선택 후 각 성경 리스트 버튼으로 리턴\n  _displayData = () => {\n    \n    const items = this.state.data.map(data => {\n      return (\n        <button className=\"book\" id={data.book_nr} key={data.book_nr} onClick={this._selectBook}>\n          {data.book_name}\n        </button>\n      );\n    });\n    return items;\n  };\n\n  //성경을 선택하면 장, 절 입력 화면 출력\n  _chapterVerse = () => {\n    return <div>\n      <span id=\"bookinfo\">{this.state.bookName}</span><br />\n      <form onSubmit={this._result}>\n        <label>\n          <input type=\"number\" pattern=\"\\d*\" name=\"chapterNum\" id=\"chapterNum\" required=\"required\" content=\"user-scalable=no\" />장\n        </label>\n        <label>\n          <input type=\"number\" pattern=\"\\d*\" name=\"verseStart\" id=\"verseStart\" content=\"user-scalable=no\" />절~\n        </label>\n        <label>\n          <input type=\"number\" pattern=\"\\d*\" name=\"verseEnd\" id=\"verseEnd\" content=\"user-scalable=no\" />절\n        </label>\n        <select name=\"version\" id=\"version\">\n          <option value=\"han\" defaultValue>개역한글</option>\n          <option value=\"gae\" >개역개정</option>\n        </select>\n        <input type=\"submit\" value=\"보기\" />\n      </form>\n    </div>;\n  };\n\n  //입력 후 결과 화면 출력 \n  _result = (event) => {\n    event.preventDefault();\n    let ddata;\n    \n    //입력 form에서 입력 데이터 가져오기\n    let formData = new FormData(event.target);\n\n    if(formData.get(\"version\") === \"han\"){\n      ddata = this.state.bookData;\n    } else {\n      ddata = this.state.bookData2;\n    }\n\n    //입력화면에 있는 장, 시작 절, 끝 절 값 가져오기\n    let cnum = Number(formData.get(\"chapterNum\"));\n    let vsnum = Number(formData.get(\"verseStart\"));\n    let venum = Number(formData.get(\"verseEnd\"));\n\n    //절을 입력하지 않았을 시 장 전체 출력\n    if (Number(formData.get(\"verseStart\"))===0 && Number(formData.get(\"verseEnd\"))===0) {\n        vsnum = 1;\n        document.getElementById(\"verseStart\").value = 1;\n        venum = 999;\n    } \n    //시작 절 부분만 입력시 해당 구절만 출력\n    else if (Number(formData.get(\"verseStart\") > 0 && Number(formData.get(\"verseEnd\")) === 0)) {\n        venum = vsnum;\n        document.getElementById(\"verseEnd\").value = vsnum;\n    }\n\n    //입력이 올바르지 않을시 alert출력 및 값 재설정\n    if (cnum < 0 ) {\n      alert(\"올바르지 않은 입력입니다.\");\n      return;\n    }\n    \n    //입력한 성경이 몇 장으로 이루어져있는지 정보 가져오기\n    let maxChapter = Number(ddata.book.length);\n    //입력한 장이 해당 성경의 장수보다 높으면 마지막 장을 출력하도록 갱신\n     if (cnum > maxChapter) {\n       cnum = maxChapter;\n       document.getElementById(\"chapterNum\").value = maxChapter;\n     }\n\n    //입력한 장이 몇 절로 이루어졌는지 정보 가져오기\n    //let maxVerse = Number(Object.keys(ddata.book[cnum-1]).length);\n    const obj = Object.values(ddata.book[cnum - 1]);\n    const ar = obj[0];\n    let maxVerse = Number(Object.keys(ar).length);\n    //입력이 올바르지 않을시 alert출력 및 값 재설정\n    if (vsnum <= 0 || vsnum > venum ) {\n      alert(\"올바르지 않은 입력입니다.\");\n      return;\n    }\n\n    let loaded = [];\n\n    //입력한 절이 해당 장의 절수보다 높으면 마지막 절을 출력하도록 갱신\n    if (venum > maxVerse) {\n      venum = maxVerse;\n      document.getElementById(\"verseEnd\").value = maxVerse;\n    }\n    if(vsnum > maxVerse){\n      vsnum = maxVerse;\n      document.getElementById(\"verseStart\").value = maxVerse;\n    }\n    let i = vsnum;\n    while (i <= venum) {\n      loaded.push({\"verseNum\": i, \"verse\":Object.values(ar)[i-1]});\n      i++;\n    }\n    //bible.json파일에 있는 data에서 필요한 구절들을 배열에 넣고 state에 갱신\n    this.setState({\n      chapter: cnum,\n      verseS: vsnum,\n      verseE: venum,\n      verseData: loaded,\n      view: true\n    });\n\n  };\n\n  //state에 있는 data를 div tag에 리턴\n  _words = () => {\n    let items = null;\n    if(this.state.verseData.length === 1){\n      items = this.state.verseData.map(tempV => {\n        return (<p key={tempV.verseNum} id={tempV.verseNum} style={{ color: 'black' }} onClick={() => {this._selectVerses(tempV.verseNum)}}>{tempV.verse}</p>);\n      })\n    }\n    else{\n      items = this.state.verseData.map(tempV => {\n        return (<p key={tempV.verseNum} id={tempV.verseNum} style={{color: 'black'}} onClick={() => { this._selectVerses(tempV.verseNum) }}>{tempV.verseNum}.{tempV.verse}</p>);\n    });\n    }\n    \n    return items;\n  };\n\n  _selectVerses = (verseNumber) => {\n    var selectedVerse = document.getElementById(verseNumber);\n    if (selectedVerse.style.color === 'black'){\n      selectedVerse.style.color = '#003399';\n    } else {\n      selectedVerse.style.color = 'black';\n    }\n  }\n\n  //출력된 구절 클립보드에 복사하기\n  _copyData = () => {\n    let copyText = document.querySelector(\".verseDisplay\");\n    let selection = window.getSelection();\n    let range = document.createRange();\n    range.selectNodeContents(copyText);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    document.execCommand(\"Copy\");\n    alert(\"클립보드에 복사 되었습니다!\");\n  };\n\n  _clearInput = () =>{\n    document.getElementById(\"chapterNum\").value = null;\n    document.getElementById(\"verseStart\").value = null;\n    document.getElementById(\"verseEnd\").value = null;\n  }\n\n  render() {\n    return <div className=\"AppDisplay\" align=\"center\">\n        <button id=\"ot\" onClick={this._loadingOT}>\n          구약\n        </button>\n        <button id=\"nt\" onClick={this._loagingNT}>\n          신약\n        </button>\n        <div className=\"books\">\n          {this.state.data.length !== 0 ? this._displayData() : null}\n          {this.state.book !== 0 ? this._chapterVerse() : null}\n          {this.state.book !== 0 ? <p id=\"lastinfo\" align=\"left\">\n                해당 장(절)보다 큰 수 입력시 마지막 장(절) 출력<br />예) 창세기 경우 50장 이므로 50보다 큰 수 입력시 50장이 입력됨.\n              </p> : null}\n        </div>\n        {this.state.view ? \n          <div>\n          <button id=\"copy\" onClick={this._copyData}>\n              전체복사\n          </button>\n          <button id=\"clear\" onClick={this._clearInput}>초기화</button>\n          </div> \n        : null}\n      <br />\n        <div className=\"verseDisplay\" align=\"left\">\n          {this._words()}\n          {this.state.view && this.state.verseS !== this.state.verseE ? <p id=\"info\">\n                {this.state.bookName} {this.state.chapter}:{this.state.verseS}\n                ~{this.state.verseE} KRV\n              </p> : null}\n          {this.state.view && this.state.verseS === this.state.verseE ? <p id=\"info\">\n                {this.state.bookName} {this.state.chapter}:{this.state.verseS} KRV\n              </p> : null}\n        </div>\n      </div>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}